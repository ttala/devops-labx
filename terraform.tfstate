{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 40,
  "lineage": "2f3b0687-8edb-ceb2-4934-b99c20abbd37",
  "outputs": {
    "server_ip": {
      "value": "51.159.184.40",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "scaleway_instance_ip",
      "name": "srv_ip",
      "provider": "provider[\"registry.terraform.io/scaleway/scaleway\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "51.159.184.40",
            "id": "fr-par-2/148a5bd4-3729-4901-b2d9-8a645cae7a07",
            "organization_id": "db5118c5-608c-4413-bbcd-1ae4b283192b",
            "prefix": "51.159.184.40/32",
            "project_id": "db5118c5-608c-4413-bbcd-1ae4b283192b",
            "reverse": "",
            "server_id": "",
            "tags": null,
            "timeouts": null,
            "type": "routed_ipv4",
            "zone": "fr-par-2"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMCwiZGVmYXVsdCI6NjAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "scaleway_instance_server",
      "name": "controlplane",
      "provider": "provider[\"registry.terraform.io/scaleway/scaleway\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "additional_volume_ids": null,
            "boot_type": "local",
            "bootscript_id": null,
            "cloud_init": null,
            "enable_dynamic_ip": false,
            "enable_ipv6": false,
            "id": "fr-par-2/9fc20919-d77b-4ebf-aa2c-0d8a2561e385",
            "image": "ubuntu_jammy",
            "ip_id": "fr-par-2/148a5bd4-3729-4901-b2d9-8a645cae7a07",
            "ip_ids": null,
            "ipv6_address": "",
            "ipv6_gateway": "",
            "ipv6_prefix_length": 0,
            "name": "controlplane",
            "organization_id": "db5118c5-608c-4413-bbcd-1ae4b283192b",
            "placement_group_id": null,
            "placement_group_policy_respected": null,
            "private_ip": null,
            "private_network": [],
            "project_id": "db5118c5-608c-4413-bbcd-1ae4b283192b",
            "protected": false,
            "public_ip": "51.159.184.40",
            "public_ips": [
              {
                "address": "51.159.184.40",
                "id": "fr-par-2/148a5bd4-3729-4901-b2d9-8a645cae7a07"
              }
            ],
            "replace_on_type_change": false,
            "root_volume": [
              {
                "boot": false,
                "delete_on_termination": true,
                "name": "",
                "sbs_iops": 5000,
                "size_in_gb": 10,
                "volume_id": "fr-par-2/29d9162e-73ca-454f-9563-d4167c5dbab2",
                "volume_type": "sbs_volume"
              }
            ],
            "security_group_id": "fr-par-2/861bb7e6-57da-4168-ad39-2dbe4d8be09d",
            "state": "started",
            "tags": null,
            "timeouts": null,
            "type": "PLAY2-NANO",
            "user_data": {
              "cloud-init": "#!/bin/bash\n\n#Set master node name\nmaster_node=\"controlplane\"\n\nset -e\n\n# Update and install dependencies\napt update \u0026\u0026 apt install -y apt-transport-https ca-certificates curl gnupg lsb-release\n\necho \"[1/6] Installing containerd...\"\n# Install containerd\napt install -y containerd\n\n# Create containerd default config\nmkdir -p /etc/containerd\ncontainerd config default | tee /etc/containerd/config.toml\n\n# Set systemd as the cgroup driver for containerd\nsed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml\n\n# Restart containerd\nsystemctl restart containerd\nsystemctl enable containerd\n\necho \"[2/6] Setting up sysctl params for Kubernetes...\"\n# Required for Kubernetes networking\ncat \u003c\u003cEOF | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOF\n\nmodprobe overlay\nmodprobe br_netfilter\n\ncat \u003c\u003cEOF | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\nsysctl --system\n\necho \"[3/6] Adding Kubernetes APT repository...\"\n# Add the Kubernetes APT repo\n#mkdir -m 755 /etc/apt/keyrings\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list\n\napt update\n\necho \"[4/6] Installing kubelet, kubeadm, kubectl (v1.30)...\"\n# Install Kubernetes components\napt install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\necho \"[5/6] Disabling swap...\"\n# Kubernetes requires swap to be off\nswapoff -a\nsed -i '/ swap / s/^/#/' /etc/fstab\n\nsystemctl enable kubelet\n#systemctl start kubelet\n\necho \"[6/6] Done! Kubernetes 1.31 and containerd are installed.\"\nkubeadm version\nkubectl version --client\ncontainerd --version\n\necho \"[7] Running kube init on master node only...\"\n# Configuration only for master node\nif [ $HOSTNAME = $master_node ]; then\n    kubeadm init --pod-network-cidr=192.168.0.0/16\n    mkdir -p $HOME/.kube\n    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n    sudo chown $(id -u):$(id -g) $HOME/.kube/config\n    sleep 3\n    kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml\n    kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml\n    sleep 4\n    kubectl taint node $master_node node-role.kubernetes.io/control-plane:NoSchedule-\n    kubectl taint node $master_node node-role.kubernetes.io/master:NoSchedule-\n    kubectl run nginx --image=nginx --port=80\n    apt-get install -y bash-completion\n\n    #cat /var/log/cloud-init-output.log\nfi\necho \"[8] Finish ! \"",
              "foo": "kubernete"
            },
            "zone": "fr-par-2"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlZmF1bHQiOjYwMDAwMDAwMDAwMCwiZGVsZXRlIjo2MDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "scaleway_instance_ip.srv_ip"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
